{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"E:\\\\Virtual vow 2\\\\Virtual vow\\\\frontend\\\\src\\\\components\\\\Pagination.js\";\nimport \"./Pagination.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pagination = ({\n  currentPage,\n  totalPages,\n  onPageChange\n}) => {\n  // Generate page numbers to display\n  const getPageNumbers = () => {\n    const pages = [];\n    const maxPagesToShow = 5;\n    if (totalPages <= maxPagesToShow) {\n      // Show all pages if total pages is less than or equal to maxPagesToShow\n      for (let i = 1; i <= totalPages; i++) {\n        pages.push(i);\n      }\n    } else {\n      // Always show first page\n      pages.push(1);\n\n      // Calculate start and end of middle pages\n      let start = Math.max(2, currentPage - 1);\n      let end = Math.min(totalPages - 1, currentPage + 1);\n\n      // Adjust if we're at the beginning or end\n      if (currentPage <= 2) {\n        end = 4;\n      } else if (currentPage >= totalPages - 1) {\n        start = totalPages - 3;\n      }\n\n      // Add ellipsis if needed\n      if (start > 2) {\n        pages.push(\"...\");\n      }\n\n      // Add middle pages\n      for (let i = start; i <= end; i++) {\n        pages.push(i);\n      }\n\n      // Add ellipsis if needed\n      if (end < totalPages - 1) {\n        pages.push(\"...\");\n      }\n\n      // Always show last page\n      pages.push(totalPages);\n    }\n    return pages;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagination\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"pagination-button prev\",\n      onClick: () => onPageChange(currentPage - 1),\n      disabled: currentPage === 1,\n      children: \"Previous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-numbers\",\n      children: getPageNumbers().map((page, index) => page === \"...\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"pagination-ellipsis\",\n        children: \"...\"\n      }, `ellipsis-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `pagination-number ${currentPage === page ? \"active\" : \"\"}`,\n        onClick: () => onPageChange(page),\n        children: page\n      }, page, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"pagination-button next\",\n      onClick: () => onPageChange(currentPage + 1),\n      disabled: currentPage === totalPages,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_c = Pagination;\nexport default Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["_jsxFileName","jsxDEV","_jsxDEV","Pagination","currentPage","totalPages","onPageChange","getPageNumbers","pages","maxPagesToShow","i","push","start","Math","max","end","min","className","children","onClick","disabled","fileName","lineNumber","columnNumber","map","page","index","_c","$RefreshReg$"],"sources":["E:/Virtual vow 2/Virtual vow/frontend/src/components/Pagination.js"],"sourcesContent":["\"use client\"\r\n\r\nimport \"./Pagination.css\"\r\n\r\nconst Pagination = ({ currentPage, totalPages, onPageChange }) => {\r\n  // Generate page numbers to display\r\n  const getPageNumbers = () => {\r\n    const pages = []\r\n    const maxPagesToShow = 5\r\n\r\n    if (totalPages <= maxPagesToShow) {\r\n      // Show all pages if total pages is less than or equal to maxPagesToShow\r\n      for (let i = 1; i <= totalPages; i++) {\r\n        pages.push(i)\r\n      }\r\n    } else {\r\n      // Always show first page\r\n      pages.push(1)\r\n\r\n      // Calculate start and end of middle pages\r\n      let start = Math.max(2, currentPage - 1)\r\n      let end = Math.min(totalPages - 1, currentPage + 1)\r\n\r\n      // Adjust if we're at the beginning or end\r\n      if (currentPage <= 2) {\r\n        end = 4\r\n      } else if (currentPage >= totalPages - 1) {\r\n        start = totalPages - 3\r\n      }\r\n\r\n      // Add ellipsis if needed\r\n      if (start > 2) {\r\n        pages.push(\"...\")\r\n      }\r\n\r\n      // Add middle pages\r\n      for (let i = start; i <= end; i++) {\r\n        pages.push(i)\r\n      }\r\n\r\n      // Add ellipsis if needed\r\n      if (end < totalPages - 1) {\r\n        pages.push(\"...\")\r\n      }\r\n\r\n      // Always show last page\r\n      pages.push(totalPages)\r\n    }\r\n\r\n    return pages\r\n  }\r\n\r\n  return (\r\n    <div className=\"pagination\">\r\n      <button\r\n        className=\"pagination-button prev\"\r\n        onClick={() => onPageChange(currentPage - 1)}\r\n        disabled={currentPage === 1}\r\n      >\r\n        Previous\r\n      </button>\r\n\r\n      <div className=\"pagination-numbers\">\r\n        {getPageNumbers().map((page, index) =>\r\n          page === \"...\" ? (\r\n            <span key={`ellipsis-${index}`} className=\"pagination-ellipsis\">\r\n              ...\r\n            </span>\r\n          ) : (\r\n            <button\r\n              key={page}\r\n              className={`pagination-number ${currentPage === page ? \"active\" : \"\"}`}\r\n              onClick={() => onPageChange(page)}\r\n            >\r\n              {page}\r\n            </button>\r\n          ),\r\n        )}\r\n      </div>\r\n\r\n      <button\r\n        className=\"pagination-button next\"\r\n        onClick={() => onPageChange(currentPage + 1)}\r\n        disabled={currentPage === totalPages}\r\n      >\r\n        Next\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pagination\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}