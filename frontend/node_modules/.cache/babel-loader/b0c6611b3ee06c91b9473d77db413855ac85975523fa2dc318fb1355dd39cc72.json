{"ast":null,"code":"var _jsxFileName = \"E:\\\\Room Rental\\\\frontend\\\\src\\\\components\\\\NotificationButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Bell } from 'lucide-react';\nimport { Button } from \"../ui/button\";\nimport { Popover, PopoverContent, PopoverTrigger } from \"../ui/popover\";\nimport { ScrollArea } from \"../ui/scroll-area\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockNotifications = [{\n  id: '1',\n  title: 'New Message',\n  message: 'You have a new message from your landlord.',\n  time: '5 minutes ago'\n}, {\n  id: '2',\n  title: 'Rent Due',\n  message: 'Your rent is due in 3 days.',\n  time: '2 hours ago'\n}, {\n  id: '3',\n  title: 'Maintenance Update',\n  message: 'The scheduled maintenance has been completed.',\n  time: '1 day ago'\n}];\nexport function NotificationButton() {\n  _s();\n  const [notifications, setNotifications] = useState(mockNotifications);\n  const [isOpen, setIsOpen] = useState(false);\n  const markAsRead = id => {\n    setNotifications(notifications.filter(n => n.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(Popover, {\n    open: isOpen,\n    onOpenChange: setIsOpen,\n    children: [/*#__PURE__*/_jsxDEV(PopoverTrigger, {\n      asChild: true,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline\",\n        size: \"icon\",\n        className: \"relative\",\n        children: [/*#__PURE__*/_jsxDEV(Bell, {\n          className: \"h-[1.2rem] w-[1.2rem]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), notifications.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"absolute top-0 right-0 h-2 w-2 rounded-full bg-red-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PopoverContent, {\n      className: \"w-80\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold mb-2\",\n        children: \"Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-muted-foreground\",\n        children: \"No new notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ScrollArea, {\n        className: \"h-[300px]\",\n        children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 last:mb-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-start\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-sm font-semibold\",\n              children: notification.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"ghost\",\n              size: \"sm\",\n              onClick: () => markAsRead(notification.id),\n              className: \"h-auto p-0 text-xs text-muted-foreground\",\n              children: \"Mark as read\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm\",\n            children: notification.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-muted-foreground mt-1\",\n            children: notification.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this)]\n        }, notification.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(NotificationButton, \"7DXUKW4e4WrLoS7upD1CLwbqXe4=\");\n_c = NotificationButton;\nvar _c;\n$RefreshReg$(_c, \"NotificationButton\");","map":{"version":3,"names":["React","useState","Bell","Button","Popover","PopoverContent","PopoverTrigger","ScrollArea","jsxDEV","_jsxDEV","mockNotifications","id","title","message","time","NotificationButton","_s","notifications","setNotifications","isOpen","setIsOpen","markAsRead","filter","n","open","onOpenChange","children","asChild","variant","size","className","fileName","_jsxFileName","lineNumber","columnNumber","length","map","notification","onClick","_c","$RefreshReg$"],"sources":["E:/Room Rental/frontend/src/components/NotificationButton.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Bell } from 'lucide-react';\r\nimport { Button } from \"../ui/button\";\r\nimport { Popover, PopoverContent, PopoverTrigger } from \"../ui/popover\";\r\nimport { ScrollArea } from \"../ui/scroll-area\";\r\n\r\nconst mockNotifications = [\r\n  { id: '1', title: 'New Message', message: 'You have a new message from your landlord.', time: '5 minutes ago' },\r\n  { id: '2', title: 'Rent Due', message: 'Your rent is due in 3 days.', time: '2 hours ago' },\r\n  { id: '3', title: 'Maintenance Update', message: 'The scheduled maintenance has been completed.', time: '1 day ago' },\r\n];\r\n\r\nexport function NotificationButton() {\r\n  const [notifications, setNotifications] = useState(mockNotifications);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const markAsRead = (id) => {\r\n    setNotifications(notifications.filter(n => n.id !== id));\r\n  };\r\n\r\n  return (\r\n    <Popover open={isOpen} onOpenChange={setIsOpen}>\r\n      <PopoverTrigger asChild>\r\n        <Button variant=\"outline\" size=\"icon\" className=\"relative\">\r\n          <Bell className=\"h-[1.2rem] w-[1.2rem]\" />\r\n          {notifications.length > 0 && (\r\n            <span className=\"absolute top-0 right-0 h-2 w-2 rounded-full bg-red-500\" />\r\n          )}\r\n        </Button>\r\n      </PopoverTrigger>\r\n      <PopoverContent className=\"w-80\">\r\n        <h3 className=\"font-semibold mb-2\">Notifications</h3>\r\n        {notifications.length === 0 ? (\r\n          <p className=\"text-sm text-muted-foreground\">No new notifications</p>\r\n        ) : (\r\n          <ScrollArea className=\"h-[300px]\">\r\n            {notifications.map((notification) => (\r\n              <div key={notification.id} className=\"mb-4 last:mb-0\">\r\n                <div className=\"flex justify-between items-start\">\r\n                  <h4 className=\"text-sm font-semibold\">{notification.title}</h4>\r\n                  <Button \r\n                    variant=\"ghost\" \r\n                    size=\"sm\" \r\n                    onClick={() => markAsRead(notification.id)}\r\n                    className=\"h-auto p-0 text-xs text-muted-foreground\"\r\n                  >\r\n                    Mark as read\r\n                  </Button>\r\n                </div>\r\n                <p className=\"text-sm\">{notification.message}</p>\r\n                <p className=\"text-xs text-muted-foreground mt-1\">{notification.time}</p>\r\n              </div>\r\n            ))}\r\n          </ScrollArea>\r\n        )}\r\n      </PopoverContent>\r\n    </Popover>\r\n  );\r\n}\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,cAAc;AACnC,SAASC,MAAM,QAAQ,cAAc;AACrC,SAASC,OAAO,EAAEC,cAAc,EAAEC,cAAc,QAAQ,eAAe;AACvE,SAASC,UAAU,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,iBAAiB,GAAG,CACxB;EAAEC,EAAE,EAAE,GAAG;EAAEC,KAAK,EAAE,aAAa;EAAEC,OAAO,EAAE,4CAA4C;EAAEC,IAAI,EAAE;AAAgB,CAAC,EAC/G;EAAEH,EAAE,EAAE,GAAG;EAAEC,KAAK,EAAE,UAAU;EAAEC,OAAO,EAAE,6BAA6B;EAAEC,IAAI,EAAE;AAAc,CAAC,EAC3F;EAAEH,EAAE,EAAE,GAAG;EAAEC,KAAK,EAAE,oBAAoB;EAAEC,OAAO,EAAE,+CAA+C;EAAEC,IAAI,EAAE;AAAY,CAAC,CACtH;AAED,OAAO,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAACS,iBAAiB,CAAC;EACrE,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMoB,UAAU,GAAIV,EAAE,IAAK;IACzBO,gBAAgB,CAACD,aAAa,CAACK,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACZ,EAAE,KAAKA,EAAE,CAAC,CAAC;EAC1D,CAAC;EAED,oBACEF,OAAA,CAACL,OAAO;IAACoB,IAAI,EAAEL,MAAO;IAACM,YAAY,EAAEL,SAAU;IAAAM,QAAA,gBAC7CjB,OAAA,CAACH,cAAc;MAACqB,OAAO;MAAAD,QAAA,eACrBjB,OAAA,CAACN,MAAM;QAACyB,OAAO,EAAC,SAAS;QAACC,IAAI,EAAC,MAAM;QAACC,SAAS,EAAC,UAAU;QAAAJ,QAAA,gBACxDjB,OAAA,CAACP,IAAI;UAAC4B,SAAS,EAAC;QAAuB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACzCjB,aAAa,CAACkB,MAAM,GAAG,CAAC,iBACvB1B,OAAA;UAAMqB,SAAS,EAAC;QAAwD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAC3E;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC,eACjBzB,OAAA,CAACJ,cAAc;MAACyB,SAAS,EAAC,MAAM;MAAAJ,QAAA,gBAC9BjB,OAAA;QAAIqB,SAAS,EAAC,oBAAoB;QAAAJ,QAAA,EAAC;MAAa;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACpDjB,aAAa,CAACkB,MAAM,KAAK,CAAC,gBACzB1B,OAAA;QAAGqB,SAAS,EAAC,+BAA+B;QAAAJ,QAAA,EAAC;MAAoB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAErEzB,OAAA,CAACF,UAAU;QAACuB,SAAS,EAAC,WAAW;QAAAJ,QAAA,EAC9BT,aAAa,CAACmB,GAAG,CAAEC,YAAY,iBAC9B5B,OAAA;UAA2BqB,SAAS,EAAC,gBAAgB;UAAAJ,QAAA,gBACnDjB,OAAA;YAAKqB,SAAS,EAAC,kCAAkC;YAAAJ,QAAA,gBAC/CjB,OAAA;cAAIqB,SAAS,EAAC,uBAAuB;cAAAJ,QAAA,EAAEW,YAAY,CAACzB;YAAK;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC/DzB,OAAA,CAACN,MAAM;cACLyB,OAAO,EAAC,OAAO;cACfC,IAAI,EAAC,IAAI;cACTS,OAAO,EAAEA,CAAA,KAAMjB,UAAU,CAACgB,YAAY,CAAC1B,EAAE,CAAE;cAC3CmB,SAAS,EAAC,0CAA0C;cAAAJ,QAAA,EACrD;YAED;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eACNzB,OAAA;YAAGqB,SAAS,EAAC,SAAS;YAAAJ,QAAA,EAAEW,YAAY,CAACxB;UAAO;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjDzB,OAAA;YAAGqB,SAAS,EAAC,oCAAoC;YAAAJ,QAAA,EAAEW,YAAY,CAACvB;UAAI;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAbjEG,YAAY,CAAC1B,EAAE;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAcpB,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CACb;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACa,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEd;AAAClB,EAAA,CA9CeD,kBAAkB;AAAAwB,EAAA,GAAlBxB,kBAAkB;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}