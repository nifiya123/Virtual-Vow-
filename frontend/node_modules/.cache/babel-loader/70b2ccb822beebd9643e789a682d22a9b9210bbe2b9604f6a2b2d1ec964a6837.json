{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"E:\\\\Virtual vow 2\\\\Virtual vow 2\\\\Virtual vow\\\\frontend\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n\n  // Load cart from localStorage on initial render\n  useEffect(() => {\n    const storedCart = localStorage.getItem(\"jewelry-cart\");\n    if (storedCart) {\n      try {\n        setCart(JSON.parse(storedCart));\n      } catch (error) {\n        console.error(\"Error parsing cart from localStorage:\", error);\n        setCart([]);\n      }\n    }\n  }, []);\n\n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem(\"jewelry-cart\", JSON.stringify(cart));\n  }, [cart]);\n\n  // Add item to cart\n  const addToCart = (product, quantity = 1) => {\n    console.log(\"Adding to cart:\", product, quantity);\n    if (!product || !product._id) {\n      console.error(\"Invalid product data:\", product);\n      return;\n    }\n    setCart(prevCart => {\n      // Check if product already exists in cart\n      const existingItemIndex = prevCart.findIndex(item => item._id === product._id);\n      if (existingItemIndex >= 0) {\n        // Update quantity of existing item\n        const updatedCart = [...prevCart];\n        updatedCart[existingItemIndex] = {\n          ...updatedCart[existingItemIndex],\n          quantity: updatedCart[existingItemIndex].quantity + quantity\n        };\n        return updatedCart;\n      } else {\n        var _product$images;\n        // Add new item to cart\n        return [...prevCart, {\n          ...product,\n          quantity,\n          // Ensure these fields exist\n          price: product.price || 0,\n          name: product.name || \"Unknown Product\",\n          image: ((_product$images = product.images) === null || _product$images === void 0 ? void 0 : _product$images[0]) || product.image || \"/placeholder.svg\"\n        }];\n      }\n    });\n  };\n\n  // Remove item from cart\n  const removeFromCart = productId => {\n    setCart(prevCart => prevCart.filter(item => item._id !== productId));\n  };\n\n  // Update item quantity\n  const updateQuantity = (productId, quantity) => {\n    setCart(prevCart => prevCart.map(item => item._id === productId ? {\n      ...item,\n      quantity\n    } : item));\n  };\n\n  // Clear cart\n  const clearCart = () => {\n    setCart([]);\n  };\n\n  // Calculate cart total\n  const getCartTotal = () => {\n    return cart.reduce((total, item) => total + item.price * item.quantity, 0);\n  };\n\n  // Get cart item count\n  const getCartItemCount = () => {\n    return cart.reduce((count, item) => count + item.quantity, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      removeFromCart,\n      updateQuantity,\n      clearCart,\n      getCartTotal,\n      getCartItemCount\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"gPYbNUmWK8tVVPcrFDrHV23HVlE=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","createContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","children","cart","setCart","storedCart","localStorage","getItem","JSON","parse","error","console","setItem","stringify","addToCart","product","quantity","log","_id","prevCart","existingItemIndex","findIndex","item","updatedCart","_product$images","price","name","image","images","removeFromCart","productId","filter","updateQuantity","map","clearCart","getCartTotal","reduce","total","getCartItemCount","count","Provider","value","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Virtual vow 2/Virtual vow 2/Virtual vow/frontend/src/context/CartContext.js"],"sourcesContent":["\"use client\"\r\n\r\nimport { createContext, useState, useEffect } from \"react\"\r\n\r\nexport const CartContext = createContext()\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([])\r\n\r\n  // Load cart from localStorage on initial render\r\n  useEffect(() => {\r\n    const storedCart = localStorage.getItem(\"jewelry-cart\")\r\n    if (storedCart) {\r\n      try {\r\n        setCart(JSON.parse(storedCart))\r\n      } catch (error) {\r\n        console.error(\"Error parsing cart from localStorage:\", error)\r\n        setCart([])\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  // Save cart to localStorage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem(\"jewelry-cart\", JSON.stringify(cart))\r\n  }, [cart])\r\n\r\n  // Add item to cart\r\n  const addToCart = (product, quantity = 1) => {\r\n    console.log(\"Adding to cart:\", product, quantity)\r\n\r\n    if (!product || !product._id) {\r\n      console.error(\"Invalid product data:\", product)\r\n      return\r\n    }\r\n\r\n    setCart((prevCart) => {\r\n      // Check if product already exists in cart\r\n      const existingItemIndex = prevCart.findIndex((item) => item._id === product._id)\r\n\r\n      if (existingItemIndex >= 0) {\r\n        // Update quantity of existing item\r\n        const updatedCart = [...prevCart]\r\n        updatedCart[existingItemIndex] = {\r\n          ...updatedCart[existingItemIndex],\r\n          quantity: updatedCart[existingItemIndex].quantity + quantity,\r\n        }\r\n        return updatedCart\r\n      } else {\r\n        // Add new item to cart\r\n        return [\r\n          ...prevCart,\r\n          {\r\n            ...product,\r\n            quantity,\r\n            // Ensure these fields exist\r\n            price: product.price || 0,\r\n            name: product.name || \"Unknown Product\",\r\n            image: product.images?.[0] || product.image || \"/placeholder.svg\",\r\n          },\r\n        ]\r\n      }\r\n    })\r\n  }\r\n\r\n  // Remove item from cart\r\n  const removeFromCart = (productId) => {\r\n    setCart((prevCart) => prevCart.filter((item) => item._id !== productId))\r\n  }\r\n\r\n  // Update item quantity\r\n  const updateQuantity = (productId, quantity) => {\r\n    setCart((prevCart) => prevCart.map((item) => (item._id === productId ? { ...item, quantity } : item)))\r\n  }\r\n\r\n  // Clear cart\r\n  const clearCart = () => {\r\n    setCart([])\r\n  }\r\n\r\n  // Calculate cart total\r\n  const getCartTotal = () => {\r\n    return cart.reduce((total, item) => total + item.price * item.quantity, 0)\r\n  }\r\n\r\n  // Get cart item count\r\n  const getCartItemCount = () => {\r\n    return cart.reduce((count, item) => count + item.quantity, 0)\r\n  }\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        cart,\r\n        addToCart,\r\n        removeFromCart,\r\n        updateQuantity,\r\n        clearCart,\r\n        getCartTotal,\r\n        getCartItemCount,\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  )\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}