{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5004/api';\nconst api = axios.create({\n  baseURL: API_URL\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n});\napi.interceptors.response.use(response => response, error => {\n  if (error.message === 'Network Error') {\n    console.error('Unable to connect to the server. Please check your internet connection and try again.');\n  } else {\n    console.error('API Error:', error.response ? error.response.data : error.message);\n  }\n  return Promise.reject(error);\n});\nexport const login = credentials => api.post('/auth/login', credentials);\nexport const register = userData => api.post('/auth/register', userData);\nexport const getProperties = () => api.get('/properties');\nexport const addProperty = propertyData => {\n  return api.post('/properties', propertyData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};\nexport const updateProperty = (id, propertyData) => api.put(`/properties/${id}`, propertyData);\nexport const deleteProperty = id => api.delete(`/properties/${id}`);\nexport const getFavorites = () => api.get('/users/favorites');\nexport const addFavorite = propertyId => api.post(`/users/favorites/${propertyId}`);\nexport const removeFavorite = propertyId => api.delete(`/users/favorites/${propertyId}`);\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","response","error","message","console","data","Promise","reject","login","credentials","post","register","userData","getProperties","get","addProperty","propertyData","updateProperty","id","put","deleteProperty","delete","getFavorites","addFavorite","propertyId","removeFavorite"],"sources":["E:/Room Rental/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5004/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n});\r\n\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers['Authorization'] = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.message === 'Network Error') {\r\n      console.error('Unable to connect to the server. Please check your internet connection and try again.');\r\n    } else {\r\n      console.error('API Error:', error.response ? error.response.data : error.message);\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const login = (credentials) => api.post('/auth/login', credentials);\r\nexport const register = (userData) => api.post('/auth/register', userData);\r\n\r\nexport const getProperties = () => api.get('/properties');\r\nexport const addProperty = (propertyData) => {\r\n  return api.post('/properties', propertyData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n  });\r\n};\r\nexport const updateProperty = (id, propertyData) => api.put(`/properties/${id}`, propertyData);\r\nexport const deleteProperty = (id) => api.delete(`/properties/${id}`);\r\n\r\nexport const getFavorites = () => api.get('/users/favorites');\r\nexport const addFavorite = (propertyId) => api.post(`/users/favorites/${propertyId}`);\r\nexport const removeFavorite = (propertyId) => api.delete(`/users/favorites/${propertyId}`);\r\n\r\nexport default api;\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN;AACX,CAAC,CAAC;AAEFI,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEFN,GAAG,CAACG,YAAY,CAACQ,QAAQ,CAACN,GAAG,CAC1BM,QAAQ,IAAKA,QAAQ,EACrBC,KAAK,IAAK;EACT,IAAIA,KAAK,CAACC,OAAO,KAAK,eAAe,EAAE;IACrCC,OAAO,CAACF,KAAK,CAAC,uFAAuF,CAAC;EACxG,CAAC,MAAM;IACLE,OAAO,CAACF,KAAK,CAAC,YAAY,EAAEA,KAAK,CAACD,QAAQ,GAAGC,KAAK,CAACD,QAAQ,CAACI,IAAI,GAAGH,KAAK,CAACC,OAAO,CAAC;EACnF;EACA,OAAOG,OAAO,CAACC,MAAM,CAACL,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMM,KAAK,GAAIC,WAAW,IAAKnB,GAAG,CAACoB,IAAI,CAAC,aAAa,EAAED,WAAW,CAAC;AAC1E,OAAO,MAAME,QAAQ,GAAIC,QAAQ,IAAKtB,GAAG,CAACoB,IAAI,CAAC,gBAAgB,EAAEE,QAAQ,CAAC;AAE1E,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAMvB,GAAG,CAACwB,GAAG,CAAC,aAAa,CAAC;AACzD,OAAO,MAAMC,WAAW,GAAIC,YAAY,IAAK;EAC3C,OAAO1B,GAAG,CAACoB,IAAI,CAAC,aAAa,EAAEM,YAAY,EAAE;IAC3ChB,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;AACJ,CAAC;AACD,OAAO,MAAMiB,cAAc,GAAGA,CAACC,EAAE,EAAEF,YAAY,KAAK1B,GAAG,CAAC6B,GAAG,CAAC,eAAeD,EAAE,EAAE,EAAEF,YAAY,CAAC;AAC9F,OAAO,MAAMI,cAAc,GAAIF,EAAE,IAAK5B,GAAG,CAAC+B,MAAM,CAAC,eAAeH,EAAE,EAAE,CAAC;AAErE,OAAO,MAAMI,YAAY,GAAGA,CAAA,KAAMhC,GAAG,CAACwB,GAAG,CAAC,kBAAkB,CAAC;AAC7D,OAAO,MAAMS,WAAW,GAAIC,UAAU,IAAKlC,GAAG,CAACoB,IAAI,CAAC,oBAAoBc,UAAU,EAAE,CAAC;AACrF,OAAO,MAAMC,cAAc,GAAID,UAAU,IAAKlC,GAAG,CAAC+B,MAAM,CAAC,oBAAoBG,UAAU,EAAE,CAAC;AAE1F,eAAelC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}