{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"E:\\\\Virtual vow\\\\frontend\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n\n  // Load cart from localStorage on initial render\n  useEffect(() => {\n    const storedCart = localStorage.getItem(\"cart\");\n    if (storedCart) {\n      try {\n        setCart(JSON.parse(storedCart));\n      } catch (error) {\n        console.error(\"Error parsing cart from localStorage:\", error);\n        setCart([]);\n      }\n    }\n  }, []);\n\n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }, [cart]);\n\n  // Add item to cart\n  const addToCart = (product, quantity = 1) => {\n    setCart(prevCart => {\n      // Check if product already exists in cart\n      const existingItemIndex = prevCart.findIndex(item => item.id === product.id);\n      if (existingItemIndex >= 0) {\n        // Update quantity of existing item\n        const updatedCart = [...prevCart];\n        updatedCart[existingItemIndex] = {\n          ...updatedCart[existingItemIndex],\n          quantity: updatedCart[existingItemIndex].quantity + quantity\n        };\n        return updatedCart;\n      } else {\n        // Add new item to cart\n        return [...prevCart, {\n          ...product,\n          quantity\n        }];\n      }\n    });\n  };\n\n  // Remove item from cart\n  const removeFromCart = productId => {\n    setCart(prevCart => prevCart.filter(item => item.id !== productId));\n  };\n\n  // Update item quantity\n  const updateQuantity = (productId, quantity) => {\n    setCart(prevCart => prevCart.map(item => item.id === productId ? {\n      ...item,\n      quantity\n    } : item));\n  };\n\n  // Clear cart\n  const clearCart = () => {\n    setCart([]);\n  };\n\n  // Calculate cart total\n  const getCartTotal = () => {\n    return cart.reduce((total, item) => total + item.price * item.quantity, 0);\n  };\n\n  // Get cart item count\n  const getCartItemCount = () => {\n    return cart.reduce((count, item) => count + item.quantity, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      removeFromCart,\n      updateQuantity,\n      clearCart,\n      getCartTotal,\n      getCartItemCount\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"gPYbNUmWK8tVVPcrFDrHV23HVlE=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","createContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","children","cart","setCart","storedCart","localStorage","getItem","JSON","parse","error","console","setItem","stringify","addToCart","product","quantity","prevCart","existingItemIndex","findIndex","item","id","updatedCart","removeFromCart","productId","filter","updateQuantity","map","clearCart","getCartTotal","reduce","total","price","getCartItemCount","count","Provider","value","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Virtual vow/frontend/src/context/CartContext.js"],"sourcesContent":["\"use client\"\r\n\r\nimport { createContext, useState, useEffect } from \"react\"\r\n\r\nexport const CartContext = createContext()\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([])\r\n\r\n  // Load cart from localStorage on initial render\r\n  useEffect(() => {\r\n    const storedCart = localStorage.getItem(\"cart\")\r\n    if (storedCart) {\r\n      try {\r\n        setCart(JSON.parse(storedCart))\r\n      } catch (error) {\r\n        console.error(\"Error parsing cart from localStorage:\", error)\r\n        setCart([])\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  // Save cart to localStorage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem(\"cart\", JSON.stringify(cart))\r\n  }, [cart])\r\n\r\n  // Add item to cart\r\n  const addToCart = (product, quantity = 1) => {\r\n    setCart((prevCart) => {\r\n      // Check if product already exists in cart\r\n      const existingItemIndex = prevCart.findIndex((item) => item.id === product.id)\r\n\r\n      if (existingItemIndex >= 0) {\r\n        // Update quantity of existing item\r\n        const updatedCart = [...prevCart]\r\n        updatedCart[existingItemIndex] = {\r\n          ...updatedCart[existingItemIndex],\r\n          quantity: updatedCart[existingItemIndex].quantity + quantity,\r\n        }\r\n        return updatedCart\r\n      } else {\r\n        // Add new item to cart\r\n        return [...prevCart, { ...product, quantity }]\r\n      }\r\n    })\r\n  }\r\n\r\n  // Remove item from cart\r\n  const removeFromCart = (productId) => {\r\n    setCart((prevCart) => prevCart.filter((item) => item.id !== productId))\r\n  }\r\n\r\n  // Update item quantity\r\n  const updateQuantity = (productId, quantity) => {\r\n    setCart((prevCart) => prevCart.map((item) => (item.id === productId ? { ...item, quantity } : item)))\r\n  }\r\n\r\n  // Clear cart\r\n  const clearCart = () => {\r\n    setCart([])\r\n  }\r\n\r\n  // Calculate cart total\r\n  const getCartTotal = () => {\r\n    return cart.reduce((total, item) => total + item.price * item.quantity, 0)\r\n  }\r\n\r\n  // Get cart item count\r\n  const getCartItemCount = () => {\r\n    return cart.reduce((count, item) => count + item.quantity, 0)\r\n  }\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        cart,\r\n        addToCart,\r\n        removeFromCart,\r\n        updateQuantity,\r\n        clearCart,\r\n        getCartTotal,\r\n        getCartItemCount,\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  )\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}